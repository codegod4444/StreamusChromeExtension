@import "transition";
@import "color";

@thumbCircumference: 12px;
@sliderPadding: 8px;
@sliderSize: 4px;

streamus-slider {
  display: block;
  cursor: pointer;
  position: relative;

  &:active:not(.is-disabled) .slider-thumb:after {
    transform: scale(1.5);
  }
 
  &:after {
    position: absolute;
    content: "";
  }

  // Support default value being horizontal by anticipating not-vertical rather than horizontal
  &:not([orientation=vertical]) {
    width: 100%;

    .slider-trackContainer {
      height: @sliderSize;
      width: 100%;
    }

    .slider-track {
      transform-origin: left center;
    }

    .slider-thumb {
      top: calc(50% - (@thumbCircumference / 2));
      left: (-@thumbCircumference / 2);
    }
    
    &:after {
      width: 100%;
      left: 0;
      top: 50%;
      transform: translateY(-50%);
      height: (@sliderSize + @sliderPadding * 2);
    }
  }

  &[orientation=vertical] {
    height: 100%;

    .slider-trackContainer {
      width: @sliderSize;
      height: 100%;
    }

    .slider-track {
      transform-origin: center bottom;
    }

    .slider-thumb {
      top: (-@thumbCircumference / 2);
      left: calc(50% - (@thumbCircumference / 2));
    }
    
    &:after {
      height: 100%;
      top: 0;
      left: 50%;
      transform: translateX(-50%);
      width: (@sliderSize + @sliderPadding * 2);
    }
  }
}

/* The time slider is more like a progress bar. Allow for hiding the thumb element until needed. */
.slider-collapsedThumb {
  .slider-thumb:after {
    transform: scale(0);
  }

  &:hover:not(.is-disabled):not(:active) .slider-thumb:after {
    transform: scale(1);
  }
}

.slider-trackContainer {
  background-color: @dark--quaternary;
  position: relative;
}

.slider-track {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: @blue--500;
  /* 
    Pass click events through the track up to the trackContainer to avoid receiving a click offset 
    which has been modified by transform: scale. Failure to do so will result in incorrect values
    when clicking on the track.
  */
  pointer-events: none;
}

.slider-thumb {
  position: absolute;
  display: flex;
  /*
    Position the thumb above the streamus-slider:after pseudo-element to ensure
    that the click target is preserved. Useful for knowing when to snap to click or not.
  */
  z-index: 1;

  &:after {
    width: @thumbCircumference;
    height: @thumbCircumference;
    background-color: @blue--500;
    border-radius: 50%;
    transform: scale(1);
    transition: transform @transition-duration--veryFast @transition-easeOutSine;
    content: "";
    will-change: transform;
  }
}